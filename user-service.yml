spring:
  application:
    name: user-service
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create
    show-sql: true
  datasource:
    url: jdbc:postgresql://${USER_DB_URL}
    username: ${USER_DB_USERNAME}
    password: ${USER_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    initialization-mode: always

server:
  port: 8081

keycloak:
  realm: cydeo-dev
  auth-server-url: http://${KEYCLOAK_URL}:8080/auth
  ssl-required: none
  resource: ticketing-app
  credentials:
    secret: ${CLIENT_SECRET}
  use-resource-role-mappings: true
  bearer-only: true

master:
  user:
    username: ${MASTER_USER}
    password: ${MASTER_PASSWORD}
  realm: master
  client: master-client

eureka:
  instance:
    preferIpAddress: true
    ipAddress: ${HOST}
    status-page-url-path: http://${z}:8081/actuator/info
    health-check-url-path: ${management.context-path}/health
  client:
    serviceUrl:
      defaultZone: http://${EUREKA}:8761/eureka/

management:
  endpoint:
    health:
      show-details: "ALWAYS"
  endpoints:
    web:
      exposure:
        include: "*"
  context-path: http://${HOST}:${server.port}/actuator

info:
  application:
    name: ${spring.application.name}
    description: Ticketing Application User Service
    version: '@project.version@'
    spring-cloud-version: '@spring-cloud.version@'
    spring-boot-version: '@project.parent.version@'

resilience4j:

  circuitbreaker:
    configs:
      default:
        automaticTransitionFromOpenToHalfOpenEnabled: true
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 2
        slidingWindowSize: 2
        waitDurationInOpenState: 10000
        slidingWindowType: COUNT_BASED
    instances:
      project-service:
        baseConfig: default
        waitDurationInOpenState: 15000
      task-service:
        baseConfig: default
        waitDurationInOpenState: 20000

  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 200
    instances:
      project-service:
        baseConfig: default
      task-service:
        baseConfig: default

  ratelimiter:
    configs:
      default:
        timeout-duration: 5000
        limitRefreshPeriod: 5000
        limitForPeriod: 1
    instances:
      project-service:
        baseConfig: default
      task-service:
        baseConfig: default

openapi:
  oAuthFlow:
    tokenUrl: "http://18.185.103.42:8080/auth/realms/cydeo-dev/protocol/openid-connect/token"
